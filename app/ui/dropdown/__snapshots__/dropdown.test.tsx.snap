// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Render 1`] = `
<View
  className="z-50"
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="relative h-[60px] rounded-[10px] border-b-midnight p-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "backgroundColor": "#1B2021",
        "borderBottomLeftRadius": 10,
        "borderBottomRightRadius": 10,
        "borderBottomWidth": 0,
      }
    }
  >
    <View
      className="flex-row items-center justify-between"
    >
      <Text
        color="#fff"
        numberOfLines={1}
        style={
          [
            {
              "color": "#fff",
              "fontFamily": "Montserrat_500Medium",
              "fontSize": 20,
              "textAlign": "left",
            },
            undefined,
          ]
        }
        testID="title"
        translate={true}
      >
        Option 1
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "transform": [
              {
                "rotate": "0deg",
              },
            ],
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onSelect={[MockFunction]}
          onStartShouldSetResponder={[Function]}
          options={
            [
              {
                "label": "Option 1",
                "value": "1",
              },
              {
                "label": "Option 2",
                "value": "2",
              },
              {
                "label": "Option 3",
                "value": "3",
              },
            ]
          }
          pointerEvents="auto"
          setIsOpen={[MockFunction]}
          setValue={[MockFunction]}
          style={
            [
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#1B2021",
                "borderRadius": 16,
                "borderWidth": 0,
                "justifyContent": "center",
                "padding": 0,
              },
              {
                "transform": [
                  {
                    "scale": 1,
                  },
                ],
              },
            ]
          }
          testID="icon-wrapper"
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#fff",
                  "fontSize": 24,
                },
                undefined,
                {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {},
              ]
            }
            testID="icon"
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "#1B2021",
          "borderBottomLeftRadius": 10,
          "borderBottomRightRadius": 10,
          "overflow": "hidden",
          "position": "absolute",
          "top": 60,
          "width": "100%",
          "zIndex": 10000,
        },
        {
          "height": 0,
          "opacity": 0,
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      isSelected={true}
      label="Option 1"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
          {
            "padding": 8,
            "paddingHorizontal": 15,
          },
        ]
      }
      testID="dropdown-option-1"
      value="1"
    >
      <Text
        color="#fff"
        numberOfLines={1}
        style={
          [
            {
              "color": "#fff",
              "fontFamily": "Montserrat_300Light",
              "fontSize": 20,
              "textAlign": "left",
            },
            undefined,
          ]
        }
        testID="title"
      >
        Option 1
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#1B2021",
              "borderRadius": 16,
              "borderWidth": 0,
              "justifyContent": "center",
              "padding": 0,
            },
            {
              "transform": [
                {
                  "scale": 1,
                },
              ],
            },
          ]
        }
        testID="icon-wrapper"
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
          testID="icon"
        >
          
        </Text>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      isSelected={false}
      label="Option 2"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          {
            "padding": 8,
            "paddingHorizontal": 15,
          },
        ]
      }
      testID="dropdown-option-2"
      value="2"
    >
      <Text
        color="#fff"
        numberOfLines={1}
        style={
          [
            {
              "color": "#fff",
              "fontFamily": "Montserrat_300Light",
              "fontSize": 20,
              "textAlign": "left",
            },
            undefined,
          ]
        }
        testID="title"
      >
        Option 2
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      isSelected={false}
      label="Option 3"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          {
            "padding": 8,
            "paddingHorizontal": 15,
          },
        ]
      }
      testID="dropdown-option-3"
      value="3"
    >
      <Text
        color="#fff"
        numberOfLines={1}
        style={
          [
            {
              "color": "#fff",
              "fontFamily": "Montserrat_300Light",
              "fontSize": 20,
              "textAlign": "left",
            },
            undefined,
          ]
        }
        testID="title"
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;
