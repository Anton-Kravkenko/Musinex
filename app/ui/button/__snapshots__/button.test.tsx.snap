// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Render 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  className="mb-4"
  collapsable={false}
  focusable={true}
  icon="search"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "backgroundColor": "#888888",
        "borderRadius": 10,
        "padding": 12,
        "width": "100%",
      },
      {
        "backgroundColor": "red",
      },
      {
        "transform": [
          {
            "scale": 1,
          },
        ],
      },
    ]
  }
  testID="button"
  text="by"
>
  <View
    className="flex-row items-center"
    style={
      {
        "gap": 10,
        "justifyContent": "space-between",
        "marginVertical": 5,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#888888",
            "borderRadius": 6,
            "height": 20,
            "width": 20,
          },
          {
            "letterSpacing": 1,
            "textTransform": "none",
          },
        ]
      }
      testID="skeleton"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="auto"
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#000",
            "borderRadius": 16,
            "borderWidth": 0,
            "justifyContent": "center",
            "padding": 8,
          },
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
        ]
      }
      testID="icon-wrapper"
    >
      <Text />
    </View>
  </View>
</View>
`;
